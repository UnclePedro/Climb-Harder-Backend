// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

// PRODUCTION
datasource db {
  provider  = "postgresql"
  url  	    = env("DATABASE_URL")
  // uncomment next line if you use Prisma <5.10
  // directUrl = env("DATABASE_URL_UNPOOLED")
}

model User {
  id              Int             @id @default(autoincrement())
  apiKey          String          @unique
  seasons         Season[]
}

model Season {
  id              Int             @id @default(autoincrement())
  name            String
  number          Int
  workouts        Workout[]       // One-to-many relationship with Workout
  seasonNotes     SeasonNotes?    // One-to-one relationship with SeasonNotes
  user            User            @relation(fields: [userId], references: [id]) // Relation to User
  userId          Int             // Foreign key to the User model
}

model SeasonNotes {
  seasonId          Int           @id // Foreign key to Season ID
  trainingFocuses   String?
  goals             String?
  achievements      String?
  season            Season        @relation(fields: [seasonId], references: [id], onDelete: Cascade)
}

model Workout {
  id              Int                @id @default(autoincrement())
  name            String        
  trainingType    TrainingType  
  details         String    
  duration        Int           
  date            DateTime
  season          Season             @relation(fields: [seasonId], references: [id], onDelete: Cascade)
  seasonId        Int                // Foreign key to Season  
}

// Enum for the different types of training
enum TrainingType {
  Base
  Strength
  Power
  PowerEndurance
  Performance
}